from pathlib import Path
from secrets import token_hex

import api.repository.exploit.db.exploits as exploit_db
from api.model.exploit_model import Exploit, ExploitResult, ExploitRun, ExploitStatus


def upload_exploit(task_id: int, user_id: int, exploit_text: str) -> Exploit:
    """
    Загрузить эксплоит на хранилище, доступное из всех воркеров. Также создать эксплоит в БД
    Сейчас просто костыль который кладет это на диск
    """
    exploit_path = Path(f"/tmp/exploits/{task_id}/{user_id}/{token_hex()}.py")

    exploit_path.parent.mkdir(exist_ok=True, parents=True)

    f = open(exploit_path, "w")
    f.write(exploit_text)
    f.close()

    print(exploit_path)

    exploit_id = exploit_db.upload_exploit(user_id, task_id, str(exploit_path))

    return Exploit(
        exploit_id=exploit_id,
        task_id=task_id,
        user_id=user_id,
        exploit_path=str(exploit_path),
    )


def get_exploit(exploit_id: int) -> Exploit | None:
    return exploit_db.get_exploit(exploit_id)


def get_exploit_run(exploit_run_id: int) -> ExploitRun | None:
    return exploit_db.get_exploit_run(exploit_run_id)


def get_exploit_by_run_id(exploit_run_id: int) -> Exploit | None:
    run = exploit_db.get_exploit_run(exploit_run_id)
    if run is None:
        return None

    return exploit_db.get_exploit(run.exploit_id)


def get_exploit_status(
    run_id: int,
) -> tuple[ExploitStatus | None, ExploitResult | None]:
    run = exploit_db.get_exploit_run(run_id)
    if run is None:
        return None, None

    return run.status, run.result


def run_exploit(exploit_id: int, image_name: str) -> int:
    return exploit_db.create_exploit_run(exploit_id, image_name)
