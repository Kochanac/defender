import logging

import api.model.exploit_model as m_exploit

from .. import exploit as exploit
from ..db import exploits as db_exploits


def get_running_exploits(
    limit: int,
) -> dict[int, tuple[m_exploit.ExploitStatus | None]]:
    ids = db_exploits.get_exploit_runs_without_a_result(limit)

    return {int(id): exploit.get_exploit_status(id)[0] for id in ids}



def set_exploit_run_state(exploit_run_id: int, status: m_exploit.ExploitStatus):
    logging.info(f"status change. {exploit_run_id=} {status=}")
    db_exploits.set_exploit_run_status(exploit_run_id, status)

def set_exploit_run_result(exploit_run_id: int, result: m_exploit.ExploitResult):
    logging.info(f"result change. {exploit_run_id=} {result=}")
    db_exploits.set_exploit_run_result(exploit_run_id, result)


