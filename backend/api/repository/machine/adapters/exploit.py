
import api.model.machine as m_machine
import api.model.work as m_work
import api.repository.exploit.exploit as exploit

from .. import machine


def gen_exploit_run_machine_name(exploit_run_id: int) -> str:
	return f"exploit_run_{exploit_run_id}"

def get_machine(exploit_run_id: int) -> m_machine.Machine | None:
	machine_name = gen_exploit_run_machine_name(exploit_run_id)

	return machine.get_machine(machine_name)


def start_machine(exploit_run_id: int):
    machine_name = gen_exploit_run_machine_name(exploit_run_id)


    exp_run = exploit.get_exploit_run(exploit_run_id)
    if exp_run is None:
        raise ValueError("exploit run not found")

    # task_name не так важен
    data = m_work.CreateWorkData(task_name=machine_name, image=exp_run.target_image)

    machine.create_machine(data, machine_name)


def delete_machine(task_id: int):
    machine_name = gen_exploit_run_machine_name(task_id)

    machine.delete_machine(machine_name)


